name: 'Build macOS'

on:
  workflow_call:
    inputs:
      python_version:
        description: 'Python version to use'
        required: false
        default: '3.10'
        type: string
      chromium_version:
        description: 'Ungoogled Chromium version'
        required: false
        default: '129.0.6668.58-1.1'
        type: string
      chromedriver_version:
        description: 'ChromeDriver version'
        required: false
        default: '131.0.6724.0'
        type: string

env:
  CHROMIUM_BASE_URL: 'https://github.com/ungoogled-software/ungoogled-chromium-macos/releases/download'
  CHROMEDRIVER_BASE_URL: 'https://storage.googleapis.com/chrome-for-testing-public'
  OUTPUT_DIR: 'ungoogled_chromium'
  
jobs:
  build-macos:
    name: Bundle Executable
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install pipenv
        run: |
          pip install --user pipenv
          echo "$HOME/Library/Python/3.10/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          pipenv install --dev

      - name: Cache Ungoogled Chromium
        id: cache-chromium
        uses: actions/cache@v4
        with:
          path: ${{ env.OUTPUT_DIR }}
          key: ${{ runner.os }}-chromium-${{ inputs.chromium_version }}

      - name: Download Ungoogled Chromium
        if: steps.cache-chromium.outputs.cache-hit != 'true'
        run: |
          curl -L -o ungoogled-chromium.dmg ${{ env.CHROMIUM_BASE_URL }}/${{ inputs.chromium_version }}/ungoogled-chromium_${{ inputs.chromium_version }}_x86-64-macos.dmg
          mkdir -p ${{ env.OUTPUT_DIR }}
          hdiutil attach ungoogled-chromium.dmg
          
          # Dynamically get the volume name
          VOLUME_NAME=$(ls /Volumes | grep -i "Chromium")
          cp -R /Volumes/$VOLUME_NAME/Chromium.app ${{ env.OUTPUT_DIR }}/

          hdiutil detach /Volumes/$VOLUME_NAME
          ls -la ${{ env.OUTPUT_DIR }}


      - name: Cache ChromeDriver 
        id: cache-chromedriver
        uses: actions/cache@v4
        with:
          path: ${{ env.OUTPUT_DIR }}/chromedriver
          key: ${{ runner.os }}-chromedriver-${{ inputs.chromedriver_version }}

      - name: Download ChromeDriver
        if: steps.cache-chromedriver.outputs.cache-hit != 'true'
        run: |
          curl -L -o chromedriver.zip ${{ env.CHROMEDRIVER_BASE_URL }}/${{ inputs.chromedriver_version }}/mac-x64/chromedriver-mac-x64.zip
          unzip chromedriver.zip
          mv chromedriver-mac-x64/chromedriver ${{ env.OUTPUT_DIR }}/
          rm -rf chromedriver-mac-x64 chromedriver.zip
          ls -la ${{ env.OUTPUT_DIR }}

      - name: Debug - System Information
        run: |
          echo "Operating System Information:"
          sw_vers
          echo "CPU Architecture:"
          uname -m
          echo "Available CPUs:"
          sysctl -n hw.ncpu
          echo "Available Memory:"
          vm_stat | perl -ne '/page size of (\d+)/ and $size=$1; /Pages free: (\d+)/ and printf("Free Memory: %.2f GB\n", $1 * $size / 1048576 / 1024)'
          echo "Disk Space:"
          df -h
          echo "Installed Software Versions:"
          echo "Python: $(python --version)"
          echo "Pip: $(pip --version)"
          echo "Pipenv: $(pipenv --version)"
          echo "Xcode: $(xcodebuild -version | head -n 1)"
          echo "Homebrew: $(brew --version)"
          echo "Git: $(git --version)"
          echo "Environment Variables:"
          env

      - name: Debug - Check DMG contents and paths
        run: |
          echo "Contents of the current directory:"
          ls -R
          echo "Contents of ${{ env.OUTPUT_DIR }}:"
          ls -R ${{ env.OUTPUT_DIR }}
          echo "Disk space usage:"
          df -h
          echo "DMG file info:"
          file ungoogled-chromium.dmg
          echo "DMG file size:"
          du -sh ungoogled-chromium.dmg
          echo "Mounted volumes:"
          ls -l /Volumes/
          echo "Environment variables:"
          env
          echo "Contents of the DMG file:"
          hdiutil attach ungoogled-chromium.dmg
          ls -R /Volumes/Ungoogled-Chromium
          hdiutil detach /Volumes/Ungoogled-Chromium
          echo "DMG contents:"
          hdiutil imageinfo ungoogled-chromium.dmg

      # - name: Package the app using PyInstaller
      #   run: pipenv run pyinstaller main.spec

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: macOS Executable
      #     path: dist/scrapegoat_macos_x64
